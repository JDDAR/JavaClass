************** JAVA **********************
******************************************
Clase1 : 

Instalar jdk (version21)
openJDK 

--------- Paquetes 

org -> Proyectos academiucos, open source, non profit 

com -> derechos de autor, empresarialies, proyectos profit 

_____


Tabla de presedencia de opreadores JAVA 
*****************************************************


************** METODOS *****************************
****************************************************


Un metodo es un bloque de codigo que agrupa un conjunto de instrucciones relacionadas con obtener un resultado (solo uno - lenguajes clasicos - ) 

Funcionn == metodo 

¡ los metodos deben estar dentro de una clase ! <--------
¡ las funciones no necesariamente pueden estar dentro de u¿na clase ! <-------

Sinonimos de metodo : Procedimientos, Procesos, Rutinas(antes),subrutinas 

Procedimientos --> proceso (Entradas [inputs ] / Salidas [Resultados])

Parametros: variables que se utilizan n los metodos para recibir informacion

FIRMA DE UN METODO 

* Tipo de dato del retorno:
	void -> ausencoa de Retorno /
	y el tipo de dato de retorno 
* nombre de metodo :  verbos infinitivos  (IR AR ER IR) cmelCases
* Parametros : 
	Tipo de datos
	Nombres
	Separacion por comas 


Valor de retorno 
	Se puede poner en una variabble del mismo tipo 

-----------------------------------------------------------------------2/05/20254
condicional : ----> expresiones cuyo valor final es :  booleano 
	

Operadores logicos : 

BOOLEANOS 
	computan dos operadores operandos:(Verdadero, Falso)
	
AND o && 
OR logico ||
!

TABLAS DE VERDAD : 

 p   q   &&    ||
---|---|----|-----|	
 F   F    F    F
---|---|----|-----| 
 F   V    F    V
---|---|----|-----|
 V   F    F    V
---|---|----|-----|
 V   V    V    V
  
Gerarquia de operadores en java 


GERARQUIA DE OPERADORES (Incluye operadores logicos)

                      
                       ()       --> si hay operadores de la misma gerarquia se resuelven de izquierda a derecha 
		  ------------		
		      * / %
		-----------------
		      + -
	      ---------------------
		    >= <= < >
	    -------------------------
		     == , !=
	  -----------------------------
		        !
	---------------------------------
		       &&
      -------------------------------------
		       ||
    -----------------------------------------
			= 
  ----------------------------------------------



TABLAS DE VERDAD 
	con los siguientes valores 
	A = 2 , B = 3 , C = 4 , D = 5

	Determine el valor final de las siguientes expresiones 


FLUJO SECUENCIAL DE UN PROGRAMA 
|
|----->	COMPILADOR --> ejecuta las instrucciones de un programa en ESTRICTO ORDEN DE APARICION 
|			desde la primera  hasta la ultima 
|
|
|-----> PSEUDOCODIGO : Def: Menera de expresar una secuencia ordenada de pasos que definen unproceso
		| 
		|------> Es un lenguaje informal ( de uso diario ) 
		|	
		|------> No se ejecuta, No se complila  
		| 
		|------> Puede ser escrito en cualquir editor de codigo 

	EJEMPLO: 
	
	INICIO -> La puerta de mi casa (Cerrada)
		|
		|----> Montarme en la bici 
		|	
		|----> Dirigirme a la avenida
		|
		|----> Bajar hasta Candelaria la nueva
		|
		|----> Coger la villavicencio Hasta el tunal
		| 
		|----> Cruzar el semforo para cruzar por el hospital tunal 
		|
		|----> Seguir derecho hasta volterar por la 24 sur 
		|
		|----> Pasar por el olaya hasta la primera de mayo con 24
		|
		|----> Seguir derecho por la 24 hasta llegar a hotua con caracas 
		|
		|----> continuar por la caracas hacia el norte hasta la 52 con caracas 
		|
		|----> llego al sena por la puerta del parqueadero del sena 
		|
		|----> Entrego el carnet para ingresar 
		|	
		FIN -> ENTRO AL SENA 



ESTRUCTURAS SELECTIVAS : Estructuras que permiten la difulcacion del orden secuencial en un programa cualquiera 
	|
	|
	|-------> Tipos de estructuras de JAVA 	
		        |
			|--> IF 
			|		
			|--> IF ELSE 
			|
			|--> IF ELSE IF 
			|
			|--> IF ANIDADOS 
			|
			|--> SWITCH (seleccion de casos)


******************************************************************************************************************************************************************************************************** CLICLOS 

los ciclos son una estructura de control que permiten repetir instrucciones un numro controlado o no controlado 

dos tipos de ciclos   

CONTROLADA POR CONTADOR --->  
	|
	|---> VARIABLE DE CONTROL 
	|
	|---> VALOR INICIAL
	|
	|---> CONDICIONAL (una expresion que tiene como resultado un vlaor booleano) 
	|
	|---> INSTRUCCION DE INCREMENYTO (i, u ..)


+= --> Operador de asignacion complejo 

++ --> Operador de incremnto 


ITERACION : --->  Repeticion en el ciclo  


OPERADORES DE ASIGNACION COMPUESTOS --- Resumir 

Operadores unarios 
	|
	|----->	! 
	|----->	a++
	|----->	b--

CONTROLADA POR CENTINELAS ----> 
	|
	|--> 
	

** CICLO DO WHILE  **********************************************
*****************************************************************

Es una estructura de control de ciclo se ejecuta el ciclo una o mas veces siempre se cumpla la condicion 

equal es queivalente == 

Switch 

permite realizar distintas acciones con base en posibles valores 



***********************************************************************
************************************************************** POO 



Atributos --> Estado del objeto 

Metodos --> Comportamiento 


**************************************
Encapsulamiento 
define el nivel de acceso quie tienen los atributos o metrosdos 
	

</project>


]*************************************************PASOS #001


prom -->packesjs
en la terminal ejecutar : mvn install 
MIENBRO --> atributo o metodos 

******************
*******ORDEN RECOMENDADO DE MIEMBROS DE UNA CLASE

01--Atributos 
02--Constructor por defecto 
03--Constructor Parametrizado 
04--Getters & Setters
	|--> un get y set por cada atributo 
05--Metodos propios del comportamiento de la clase 
06--Metodo toString 

*****************************************************


super me permite acceder al objeto padre  -----> Padres 
this ------------------------------------------> Hija



/************************************************************ PROGRAMACION GENERICA ********
********************************************************************************************
Clases y metodods genericos  -->> investigar 

typscriot 
java 
zichart ? 


Tipos de datos retornos 

/* grantizar todo un sistema de tipo ?  */


es una caracterteristicas 
que los metodos trabajen no importando el parametro 

es una entidad como una clase una interface o un metodo que opera con un tipo parametrizado  es 

















  













































	












